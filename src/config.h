/* Copyright (C) 2019-2020 Lee C. Bussy (@LBussy)

This file is part of Lee Bussy's Bootstrap (bootstrap).

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. */

#ifndef CONFIG_H
#define CONFIG_H

//////////////////////////////////////////////////////////////////////////
//
// Set verbosity of debug messages 0-6
//
//      * 0 - LOG_LEVEL_SILENT     no output
//      * 1 - LOG_LEVEL_FATAL      fatal errors
//      * 2 - LOG_LEVEL_ERROR      all errors
//      * 3 - LOG_LEVEL_WARNING    errors, and warnings
//      * 4 - LOG_LEVEL_NOTICE     errors, warnings and notices
//      * 5 - LOG_LEVEL_TRACE      errors, warnings, notices & traces
//      * 6 - LOG_LEVEL_VERBOSE    all
//
// Uncomment #define for logging level desired.
//
#ifndef LOG_LEVEL
// #define LOG_LEVEL LOG_LEVEL_SILENT     // No output
// #define LOG_LEVEL LOG_LEVEL_FATAL      // Fatal errors
// #define LOG_LEVEL LOG_LEVEL_ERROR      // All errors
// #define LOG_LEVEL LOG_LEVEL_WARNING    // Errors, and warnings
// #define LOG_LEVEL LOG_LEVEL_NOTICE     // Errors, warnings and notices
// #define LOG_LEVEL LOG_LEVEL_TRACE      // Errors, warnings, notices & traces
#define LOG_LEVEL LOG_LEVEL_VERBOSE // All
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Set WiFi Channel (1, 6, 11 are the only ones which should be used)
// https://www.metageek.com/training/resources/why-channels-1-6-11.html
//
#ifndef WIFI_CHAN
#define WIFI_CHAN 1
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Set WiFi country (US, JP or CN)
// US = 1-11, CN = 1-13, JP = 1-14
//
#ifndef WIFI_COUNTRY
#define WIFI_COUNTRY "US"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Set serial baud rate (if not set via PlatformIO build flag)
//
#ifndef BAUD
#define BAUD 115200
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Access Point name
//
#ifndef APNAME
#define APNAME "bootstrap"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Access point password
//
#ifndef AP_PASSWD
#define AP_PASSWD "bootstrap"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Default host name
//
#ifndef HOSTNAME
#define HOSTNAME "bootstrap"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define reset WiFi on boot pin - reset if pulled low on boot
//
#ifndef RESETWIFI
#define RESETWIFI 13
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Frequency with which to blink LED when in Access Point blocking loop
//
#ifndef APBLINK
#define APBLINK 1000UL // 1000ms each state = 2000ms per cycle = 0.5Hz
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Frequency with which to blink LED when in Station Connect blocking loop
//
#ifndef STABLINK
#define STABLINK 333UL // 333ms each state = 666ms per cycle = ~1.5Hz
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Frequency with which to blink LED when in NTP blocking loop
//
#ifndef NTPBLINK
#define NTPBLINK 50UL // 50ms each state = 100ms per cycle = 10Hz
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Port for local web services
//
#ifndef PORT
#define PORT 80
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// NTP Server
//
#ifndef TIMESERVER
#define TIMESERVER "pool.ntp.org", "time.nist.gov"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Output pin for LED
//
#ifndef LED
#define LED LED_BUILTIN
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// SPIFFS Editor Username
//
#ifndef SPIFFSEDITUSER
#define SPIFFSEDITUSER "admin"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// SPIFFS Editor Username
//
#ifndef SPIFFSEDITPW
#define SPIFFSEDITPW "p@ssword"
#endif
//
//////////////////////////////////////////////////////////////////////////

#endif // CONFIG_H
